# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataSet
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataSet
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataSet
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html

#
# This is a data set used by the "Hello World" example pipeline provided with the project
# template. Please feel free to remove it once you remove the example pipeline.

spark_log_raw:
  type: text.TextDataSet
  filepath: data/external/Spark_2k.log

spark_log_structured:
  type: pandas.CSVDataSet
  filepath: data/interim/Spark_2k.log_structured.csv

spark_log_templates:
  type: pandas.CSVDataSet
  filepath: data/interim/Spark_2k.log_templates.csv

hdfs_test_abnormal:
  type: text.TextDataSet
  filepath: data/external/hdfs_test_abnormal

hdfs_test_normal:
  type: text.TextDataSet
  filepath: data/external/hdfs_test_normal

hdfs_train:
  type: text.TextDataSet
  filepath: data/external/hdfs_train

log4j_raw:
  type: text.TextDataSet
  filepath: data/raw/log4j-2020-02-28-22.log

log4j_structured:
  type: pandas.CSVDataSet
  filepath: data/interim/log4j-2020-02-28-22.log_structured.csv

log4j_templates:
  type: pandas.CSVDataSet
  filepath: data/interim/log4j-2020-02-28-22.log_templates.csv

normal_sample:
  type: MemoryDataSet
  data: [67, 83, 30, 74, 73, 0, 22, 22, 24, 173, 186, 117, 79, 44, 45, 66, 205]

abnormal_sample:
  type: MemoryDataSet
  data: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]